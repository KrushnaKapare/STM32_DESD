
External_interrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000318  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080004a0  080004a8  000014a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080004a0  080004a0  000014a8  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080004a0  080004a0  000014a8  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080004a0  080004a8  000014a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080004a0  080004a0  000014a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080004a4  080004a4  000014a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000014a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000014a8  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000014a8  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000112f  00000000  00000000  000014d2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000449  00000000  00000000  00002601  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000e8  00000000  00000000  00002a50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000097  00000000  00000000  00002b38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00018faa  00000000  00000000  00002bcf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000134c  00000000  00000000  0001bb79  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008bde9  00000000  00000000  0001cec5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000a8cae  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000001fc  00000000  00000000  000a8cf4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loclists 00000025  00000000  00000000  000a8ef0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 00000059  00000000  00000000  000a8f15  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000488 	.word	0x08000488

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000488 	.word	0x08000488

080001c8 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	4603      	mov	r3, r0
 80001d0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80001d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80001d6:	2b00      	cmp	r3, #0
 80001d8:	db0b      	blt.n	80001f2 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80001da:	79fb      	ldrb	r3, [r7, #7]
 80001dc:	f003 021f 	and.w	r2, r3, #31
 80001e0:	4906      	ldr	r1, [pc, #24]	@ (80001fc <__NVIC_EnableIRQ+0x34>)
 80001e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80001e6:	095b      	lsrs	r3, r3, #5
 80001e8:	2001      	movs	r0, #1
 80001ea:	fa00 f202 	lsl.w	r2, r0, r2
 80001ee:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 80001f2:	bf00      	nop
 80001f4:	370c      	adds	r7, #12
 80001f6:	46bd      	mov	sp, r7
 80001f8:	bc80      	pop	{r7}
 80001fa:	4770      	bx	lr
 80001fc:	e000e100 	.word	0xe000e100

08000200 <extint_init>:
 */

#include"led.h"

void extint_init(void)
{
 8000200:	b580      	push	{r7, lr}
 8000202:	af00      	add	r7, sp, #0
	// ENABLE CLOCK FOR GPIOA
	RCC->AHB1ENR |= BV(0);
 8000204:	4b14      	ldr	r3, [pc, #80]	@ (8000258 <extint_init+0x58>)
 8000206:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000208:	4a13      	ldr	r2, [pc, #76]	@ (8000258 <extint_init+0x58>)
 800020a:	f043 0301 	orr.w	r3, r3, #1
 800020e:	6313      	str	r3, [r2, #48]	@ 0x30

	//CONFIGURE GPIOA0 AS INPUT
	GPIOA->MODER &= ~(BV(0) | BV(1));
 8000210:	4b12      	ldr	r3, [pc, #72]	@ (800025c <extint_init+0x5c>)
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	4a11      	ldr	r2, [pc, #68]	@ (800025c <extint_init+0x5c>)
 8000216:	f023 0303 	bic.w	r3, r3, #3
 800021a:	6013      	str	r3, [r2, #0]
	GPIOA->PUPDR &= ~(BV(0) | BV(1));
 800021c:	4b0f      	ldr	r3, [pc, #60]	@ (800025c <extint_init+0x5c>)
 800021e:	68db      	ldr	r3, [r3, #12]
 8000220:	4a0e      	ldr	r2, [pc, #56]	@ (800025c <extint_init+0x5c>)
 8000222:	f023 0303 	bic.w	r3, r3, #3
 8000226:	60d3      	str	r3, [r2, #12]

	//CONFIGURE EXTERNAL INTERUUPT EXTI0 INTO SYSTEM CONFIGURATION

	SYSCFG->EXTICR[0] &= ~(BV(0)|BV(1)|BV(2)|BV(3));
 8000228:	4b0d      	ldr	r3, [pc, #52]	@ (8000260 <extint_init+0x60>)
 800022a:	689b      	ldr	r3, [r3, #8]
 800022c:	4a0c      	ldr	r2, [pc, #48]	@ (8000260 <extint_init+0x60>)
 800022e:	f023 030f 	bic.w	r3, r3, #15
 8000232:	6093      	str	r3, [r2, #8]

	//CONFIGURE EXTERNAL INTERRUPT EXTI0 INTO EXTERNAL CIRCUIT
	EXTI->IMR |= BV(0);
 8000234:	4b0b      	ldr	r3, [pc, #44]	@ (8000264 <extint_init+0x64>)
 8000236:	681b      	ldr	r3, [r3, #0]
 8000238:	4a0a      	ldr	r2, [pc, #40]	@ (8000264 <extint_init+0x64>)
 800023a:	f043 0301 	orr.w	r3, r3, #1
 800023e:	6013      	str	r3, [r2, #0]
	EXTI->RTSR |= BV(0);
 8000240:	4b08      	ldr	r3, [pc, #32]	@ (8000264 <extint_init+0x64>)
 8000242:	689b      	ldr	r3, [r3, #8]
 8000244:	4a07      	ldr	r2, [pc, #28]	@ (8000264 <extint_init+0x64>)
 8000246:	f043 0301 	orr.w	r3, r3, #1
 800024a:	6093      	str	r3, [r2, #8]

	// CONFIGURE EXTERNAL INTERRUPTS EXTI0 INTO NVIC
	NVIC_EnableIRQ(EXTI0_IRQn);
 800024c:	2006      	movs	r0, #6
 800024e:	f7ff ffbb 	bl	80001c8 <__NVIC_EnableIRQ>

}
 8000252:	bf00      	nop
 8000254:	bd80      	pop	{r7, pc}
 8000256:	bf00      	nop
 8000258:	40023800 	.word	0x40023800
 800025c:	40020000 	.word	0x40020000
 8000260:	40013800 	.word	0x40013800
 8000264:	40013c00 	.word	0x40013c00

08000268 <EXTI0_IRQHandler>:

void EXTI0_IRQHandler(void)
{
 8000268:	b580      	push	{r7, lr}
 800026a:	af00      	add	r7, sp, #0

	// clear pending bits of EXTI0 in PR
	EXTI->PR |= BV(0);
 800026c:	4b05      	ldr	r3, [pc, #20]	@ (8000284 <EXTI0_IRQHandler+0x1c>)
 800026e:	695b      	ldr	r3, [r3, #20]
 8000270:	4a04      	ldr	r2, [pc, #16]	@ (8000284 <EXTI0_IRQHandler+0x1c>)
 8000272:	f043 0301 	orr.w	r3, r3, #1
 8000276:	6153      	str	r3, [r2, #20]

	//TAKE ACTION
	led_toggle(13);
 8000278:	200d      	movs	r0, #13
 800027a:	f000 f861 	bl	8000340 <led_toggle>

}
 800027e:	bf00      	nop
 8000280:	bd80      	pop	{r7, pc}
 8000282:	bf00      	nop
 8000284:	40013c00 	.word	0x40013c00

08000288 <led_init>:
 */

#include"led.h"

void led_init(uint8_t pin)
{
 8000288:	b480      	push	{r7}
 800028a:	b083      	sub	sp, #12
 800028c:	af00      	add	r7, sp, #0
 800028e:	4603      	mov	r3, r0
 8000290:	71fb      	strb	r3, [r7, #7]
	//	12 - 24 & 25	//	pin * 2 & pin * 2 + 1
	//	13 - 26 & 27
	//1. Clock Enable
	RCC->AHB1ENR |= BV(GPIOD_CLK_EN);
 8000292:	4b29      	ldr	r3, [pc, #164]	@ (8000338 <led_init+0xb0>)
 8000294:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000296:	4a28      	ldr	r2, [pc, #160]	@ (8000338 <led_init+0xb0>)
 8000298:	f043 0308 	orr.w	r3, r3, #8
 800029c:	6313      	str	r3, [r2, #48]	@ 0x30
	//2. Mode - output
	LED_GPIO->MODER |= BV(pin * 2);
 800029e:	4b27      	ldr	r3, [pc, #156]	@ (800033c <led_init+0xb4>)
 80002a0:	681b      	ldr	r3, [r3, #0]
 80002a2:	79fa      	ldrb	r2, [r7, #7]
 80002a4:	0052      	lsls	r2, r2, #1
 80002a6:	2101      	movs	r1, #1
 80002a8:	fa01 f202 	lsl.w	r2, r1, r2
 80002ac:	4611      	mov	r1, r2
 80002ae:	4a23      	ldr	r2, [pc, #140]	@ (800033c <led_init+0xb4>)
 80002b0:	430b      	orrs	r3, r1
 80002b2:	6013      	str	r3, [r2, #0]
	LED_GPIO->MODER &= ~BV(pin * 2 + 1);
 80002b4:	4b21      	ldr	r3, [pc, #132]	@ (800033c <led_init+0xb4>)
 80002b6:	681b      	ldr	r3, [r3, #0]
 80002b8:	79fa      	ldrb	r2, [r7, #7]
 80002ba:	0052      	lsls	r2, r2, #1
 80002bc:	3201      	adds	r2, #1
 80002be:	2101      	movs	r1, #1
 80002c0:	fa01 f202 	lsl.w	r2, r1, r2
 80002c4:	43d2      	mvns	r2, r2
 80002c6:	4611      	mov	r1, r2
 80002c8:	4a1c      	ldr	r2, [pc, #112]	@ (800033c <led_init+0xb4>)
 80002ca:	400b      	ands	r3, r1
 80002cc:	6013      	str	r3, [r2, #0]
	//3. Output Type - push pull
	LED_GPIO->OTYPER &= ~BV(pin);
 80002ce:	4b1b      	ldr	r3, [pc, #108]	@ (800033c <led_init+0xb4>)
 80002d0:	685b      	ldr	r3, [r3, #4]
 80002d2:	79fa      	ldrb	r2, [r7, #7]
 80002d4:	2101      	movs	r1, #1
 80002d6:	fa01 f202 	lsl.w	r2, r1, r2
 80002da:	43d2      	mvns	r2, r2
 80002dc:	4611      	mov	r1, r2
 80002de:	4a17      	ldr	r2, [pc, #92]	@ (800033c <led_init+0xb4>)
 80002e0:	400b      	ands	r3, r1
 80002e2:	6053      	str	r3, [r2, #4]
	//4. Output Speed - low
	LED_GPIO->OSPEEDR &= ~(BV(pin * 2) | BV(pin * 2 + 1));
 80002e4:	4b15      	ldr	r3, [pc, #84]	@ (800033c <led_init+0xb4>)
 80002e6:	689b      	ldr	r3, [r3, #8]
 80002e8:	79fa      	ldrb	r2, [r7, #7]
 80002ea:	0052      	lsls	r2, r2, #1
 80002ec:	2101      	movs	r1, #1
 80002ee:	4091      	lsls	r1, r2
 80002f0:	79fa      	ldrb	r2, [r7, #7]
 80002f2:	0052      	lsls	r2, r2, #1
 80002f4:	3201      	adds	r2, #1
 80002f6:	2001      	movs	r0, #1
 80002f8:	fa00 f202 	lsl.w	r2, r0, r2
 80002fc:	430a      	orrs	r2, r1
 80002fe:	43d2      	mvns	r2, r2
 8000300:	4611      	mov	r1, r2
 8000302:	4a0e      	ldr	r2, [pc, #56]	@ (800033c <led_init+0xb4>)
 8000304:	400b      	ands	r3, r1
 8000306:	6093      	str	r3, [r2, #8]
	//5. pull up/down - no
	LED_GPIO->PUPDR &= ~(BV(pin * 2) | BV(pin * 2 + 1));
 8000308:	4b0c      	ldr	r3, [pc, #48]	@ (800033c <led_init+0xb4>)
 800030a:	68db      	ldr	r3, [r3, #12]
 800030c:	79fa      	ldrb	r2, [r7, #7]
 800030e:	0052      	lsls	r2, r2, #1
 8000310:	2101      	movs	r1, #1
 8000312:	4091      	lsls	r1, r2
 8000314:	79fa      	ldrb	r2, [r7, #7]
 8000316:	0052      	lsls	r2, r2, #1
 8000318:	3201      	adds	r2, #1
 800031a:	2001      	movs	r0, #1
 800031c:	fa00 f202 	lsl.w	r2, r0, r2
 8000320:	430a      	orrs	r2, r1
 8000322:	43d2      	mvns	r2, r2
 8000324:	4611      	mov	r1, r2
 8000326:	4a05      	ldr	r2, [pc, #20]	@ (800033c <led_init+0xb4>)
 8000328:	400b      	ands	r3, r1
 800032a:	60d3      	str	r3, [r2, #12]
}
 800032c:	bf00      	nop
 800032e:	370c      	adds	r7, #12
 8000330:	46bd      	mov	sp, r7
 8000332:	bc80      	pop	{r7}
 8000334:	4770      	bx	lr
 8000336:	bf00      	nop
 8000338:	40023800 	.word	0x40023800
 800033c:	40020c00 	.word	0x40020c00

08000340 <led_toggle>:
{
	LED_GPIO->ODR &= ~BV(pin);
}

void led_toggle(uint8_t pin)
{
 8000340:	b480      	push	{r7}
 8000342:	b083      	sub	sp, #12
 8000344:	af00      	add	r7, sp, #0
 8000346:	4603      	mov	r3, r0
 8000348:	71fb      	strb	r3, [r7, #7]
	LED_GPIO->ODR ^= BV(pin);
 800034a:	4b07      	ldr	r3, [pc, #28]	@ (8000368 <led_toggle+0x28>)
 800034c:	695b      	ldr	r3, [r3, #20]
 800034e:	79fa      	ldrb	r2, [r7, #7]
 8000350:	2101      	movs	r1, #1
 8000352:	fa01 f202 	lsl.w	r2, r1, r2
 8000356:	4611      	mov	r1, r2
 8000358:	4a03      	ldr	r2, [pc, #12]	@ (8000368 <led_toggle+0x28>)
 800035a:	404b      	eors	r3, r1
 800035c:	6153      	str	r3, [r2, #20]
}
 800035e:	bf00      	nop
 8000360:	370c      	adds	r7, #12
 8000362:	46bd      	mov	sp, r7
 8000364:	bc80      	pop	{r7}
 8000366:	4770      	bx	lr
 8000368:	40020c00 	.word	0x40020c00

0800036c <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 800036c:	b580      	push	{r7, lr}
 800036e:	af00      	add	r7, sp, #0

	led_init(13);
 8000370:	200d      	movs	r0, #13
 8000372:	f7ff ff89 	bl	8000288 <led_init>
	extint_init();
 8000376:	f7ff ff43 	bl	8000200 <extint_init>

	while(1);
 800037a:	bf00      	nop
 800037c:	e7fd      	b.n	800037a <main+0xe>
	...

08000380 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000380:	b580      	push	{r7, lr}
 8000382:	af00      	add	r7, sp, #0
  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */

  DWT_Init();
 8000384:	f000 f802 	bl	800038c <DWT_Init>
}
 8000388:	bf00      	nop
 800038a:	bd80      	pop	{r7, pc}

0800038c <DWT_Init>:
}
#pragma GCC pop_options


uint32_t DWT_Init(void)
{
 800038c:	b480      	push	{r7}
 800038e:	af00      	add	r7, sp, #0
    /* Disable TRC */
    CoreDebug->DEMCR &= ~CoreDebug_DEMCR_TRCENA_Msk; // ~0x01000000;
 8000390:	4b14      	ldr	r3, [pc, #80]	@ (80003e4 <DWT_Init+0x58>)
 8000392:	68db      	ldr	r3, [r3, #12]
 8000394:	4a13      	ldr	r2, [pc, #76]	@ (80003e4 <DWT_Init+0x58>)
 8000396:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800039a:	60d3      	str	r3, [r2, #12]
    /* Enable TRC */
    CoreDebug->DEMCR |=  CoreDebug_DEMCR_TRCENA_Msk; // 0x01000000;
 800039c:	4b11      	ldr	r3, [pc, #68]	@ (80003e4 <DWT_Init+0x58>)
 800039e:	68db      	ldr	r3, [r3, #12]
 80003a0:	4a10      	ldr	r2, [pc, #64]	@ (80003e4 <DWT_Init+0x58>)
 80003a2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80003a6:	60d3      	str	r3, [r2, #12]
    /* Disable clock cycle counter */
    DWT->CTRL &= ~DWT_CTRL_CYCCNTENA_Msk; //~0x00000001;
 80003a8:	4b0f      	ldr	r3, [pc, #60]	@ (80003e8 <DWT_Init+0x5c>)
 80003aa:	681b      	ldr	r3, [r3, #0]
 80003ac:	4a0e      	ldr	r2, [pc, #56]	@ (80003e8 <DWT_Init+0x5c>)
 80003ae:	f023 0301 	bic.w	r3, r3, #1
 80003b2:	6013      	str	r3, [r2, #0]
    /* Enable  clock cycle counter */
    DWT->CTRL |=  DWT_CTRL_CYCCNTENA_Msk; //0x00000001;
 80003b4:	4b0c      	ldr	r3, [pc, #48]	@ (80003e8 <DWT_Init+0x5c>)
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	4a0b      	ldr	r2, [pc, #44]	@ (80003e8 <DWT_Init+0x5c>)
 80003ba:	f043 0301 	orr.w	r3, r3, #1
 80003be:	6013      	str	r3, [r2, #0]
    /* Reset the clock cycle counter value */
    DWT->CYCCNT = 0;
 80003c0:	4b09      	ldr	r3, [pc, #36]	@ (80003e8 <DWT_Init+0x5c>)
 80003c2:	2200      	movs	r2, #0
 80003c4:	605a      	str	r2, [r3, #4]
    /* 3 NO OPERATION instructions */
    __ASM volatile ("NOP");
 80003c6:	bf00      	nop
    __ASM volatile ("NOP");
 80003c8:	bf00      	nop
    __ASM volatile ("NOP");
 80003ca:	bf00      	nop
    /* Check if clock cycle counter has started: 0 on success */
    return !(DWT->CYCCNT);
 80003cc:	4b06      	ldr	r3, [pc, #24]	@ (80003e8 <DWT_Init+0x5c>)
 80003ce:	685b      	ldr	r3, [r3, #4]
 80003d0:	2b00      	cmp	r3, #0
 80003d2:	bf0c      	ite	eq
 80003d4:	2301      	moveq	r3, #1
 80003d6:	2300      	movne	r3, #0
 80003d8:	b2db      	uxtb	r3, r3
}
 80003da:	4618      	mov	r0, r3
 80003dc:	46bd      	mov	sp, r7
 80003de:	bc80      	pop	{r7}
 80003e0:	4770      	bx	lr
 80003e2:	bf00      	nop
 80003e4:	e000edf0 	.word	0xe000edf0
 80003e8:	e0001000 	.word	0xe0001000

080003ec <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003ec:	480d      	ldr	r0, [pc, #52]	@ (8000424 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003ee:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003f0:	f7ff ffc6 	bl	8000380 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003f4:	480c      	ldr	r0, [pc, #48]	@ (8000428 <LoopForever+0x6>)
  ldr r1, =_edata
 80003f6:	490d      	ldr	r1, [pc, #52]	@ (800042c <LoopForever+0xa>)
  ldr r2, =_sidata
 80003f8:	4a0d      	ldr	r2, [pc, #52]	@ (8000430 <LoopForever+0xe>)
  movs r3, #0
 80003fa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003fc:	e002      	b.n	8000404 <LoopCopyDataInit>

080003fe <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003fe:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000400:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000402:	3304      	adds	r3, #4

08000404 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000404:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000406:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000408:	d3f9      	bcc.n	80003fe <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800040a:	4a0a      	ldr	r2, [pc, #40]	@ (8000434 <LoopForever+0x12>)
  ldr r4, =_ebss
 800040c:	4c0a      	ldr	r4, [pc, #40]	@ (8000438 <LoopForever+0x16>)
  movs r3, #0
 800040e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000410:	e001      	b.n	8000416 <LoopFillZerobss>

08000412 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000412:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000414:	3204      	adds	r2, #4

08000416 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000416:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000418:	d3fb      	bcc.n	8000412 <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 800041a:	f000 f811 	bl	8000440 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 800041e:	f7ff ffa5 	bl	800036c <main>

08000422 <LoopForever>:

LoopForever:
  b LoopForever
 8000422:	e7fe      	b.n	8000422 <LoopForever>
  ldr   r0, =_estack
 8000424:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000428:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800042c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000430:	080004a8 	.word	0x080004a8
  ldr r2, =_sbss
 8000434:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000438:	2000001c 	.word	0x2000001c

0800043c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800043c:	e7fe      	b.n	800043c <ADC_IRQHandler>
	...

08000440 <__libc_init_array>:
 8000440:	b570      	push	{r4, r5, r6, lr}
 8000442:	4d0d      	ldr	r5, [pc, #52]	@ (8000478 <__libc_init_array+0x38>)
 8000444:	4c0d      	ldr	r4, [pc, #52]	@ (800047c <__libc_init_array+0x3c>)
 8000446:	1b64      	subs	r4, r4, r5
 8000448:	10a4      	asrs	r4, r4, #2
 800044a:	2600      	movs	r6, #0
 800044c:	42a6      	cmp	r6, r4
 800044e:	d109      	bne.n	8000464 <__libc_init_array+0x24>
 8000450:	4d0b      	ldr	r5, [pc, #44]	@ (8000480 <__libc_init_array+0x40>)
 8000452:	4c0c      	ldr	r4, [pc, #48]	@ (8000484 <__libc_init_array+0x44>)
 8000454:	f000 f818 	bl	8000488 <_init>
 8000458:	1b64      	subs	r4, r4, r5
 800045a:	10a4      	asrs	r4, r4, #2
 800045c:	2600      	movs	r6, #0
 800045e:	42a6      	cmp	r6, r4
 8000460:	d105      	bne.n	800046e <__libc_init_array+0x2e>
 8000462:	bd70      	pop	{r4, r5, r6, pc}
 8000464:	f855 3b04 	ldr.w	r3, [r5], #4
 8000468:	4798      	blx	r3
 800046a:	3601      	adds	r6, #1
 800046c:	e7ee      	b.n	800044c <__libc_init_array+0xc>
 800046e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000472:	4798      	blx	r3
 8000474:	3601      	adds	r6, #1
 8000476:	e7f2      	b.n	800045e <__libc_init_array+0x1e>
 8000478:	080004a0 	.word	0x080004a0
 800047c:	080004a0 	.word	0x080004a0
 8000480:	080004a0 	.word	0x080004a0
 8000484:	080004a4 	.word	0x080004a4

08000488 <_init>:
 8000488:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800048a:	bf00      	nop
 800048c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800048e:	bc08      	pop	{r3}
 8000490:	469e      	mov	lr, r3
 8000492:	4770      	bx	lr

08000494 <_fini>:
 8000494:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000496:	bf00      	nop
 8000498:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800049a:	bc08      	pop	{r3}
 800049c:	469e      	mov	lr, r3
 800049e:	4770      	bx	lr
